networks:
  front-end:
  back-end:

volumes:
  db-data:

services:
  #docker build . -t worker-app
  #docker run --link redis:redis --link db:db worker-app
  worker:
    build:
      context: ./worker
    networks:
      - back-end
    depends_on:
      redis:
        condition: service_healthy 
      db:
        condition: service_healthy 

#docker build . -t result-app
#docker run -p 5001:80 --link db:db result-app
  result:
    build:
      context: ./result
    ports:
      - 5001:80
    networks:
      - front-end
      - back-end
    depends_on:
      db:
        condition: service_healthy 

  vote:
    build:
      context: ./vote
    ports:
      - 5000:80
    networks:
      - front-end
      - back-end
    depends_on:
      redis:
        condition: service_healthy

  #docker run -d -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres --name=db postgres:9.4
  db:
    image: postgres:9.4
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - "db-data:/var/lib/postgresql/data"
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: /healthchecks/postgres.sh
      interval: "5s"
    networks:
      - back-end

  # docker run -d --name=redis redis

  redis:
    image: redis
    volumes:
     - ./healthchecks:/healthchecks
    healthcheck:
      test: /healthchecks/redis.sh
      interval: "5s"
    networks:
      - back-end
